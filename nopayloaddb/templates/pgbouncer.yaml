apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: pgbouncer-helm
  labels:
    app: pgbouncer
spec:
  lookupPolicy:
    local: true
  tags:
    - name: '0.1'
      from:
        kind: DockerImage
        name: 'docker.io/ruslan33/pgbouncer-helm:0.1'
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: pgbouncer-conf
data:
  pgbouncer.ini: |
    [databases]
    postgresql = host={{ .Values.dbhost }}.{{ .Values.project }}.svc.cluster.local port=5432 dbname={{ .Values.dbname }}
    [pgbouncer]
    listen_addr = *
    listen_port = 6432
    logfile = {{ .Values.pgbouncer_logpath }}/pgbouncer.log
    pidfile = /var/run/pgbouncer/pgbouncer.pid
    auth_type = md5
    auth_file = /etc/pgbouncer/userlist.txt
    auth_user = {{ .Values.dbuser }}
    unix_socket_dir = /var/run/pgbouncer
    pool_mode = session
    max_client_conn = 10000
    ;;default_pool_size = 20
  userlist.txt: |
    {{ .Values.dbuser | quote }} {{ .Values.dbpassword | quote }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pgbouncer
  labels:
    app: pgbouncer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgbouncer
  template:
    metadata:
      labels:
        app: pgbouncer
    spec:
      containers:
      - name: pgbouncer
        image: ruslan33/pgbouncer-helm:0.1
        ports:
        - containerPort: 6432
        volumeMounts:
        - name: pgbouncer-conf
          mountPath: /etc/pgbouncer # mount pgbouncer-conf volumn to /etc/pgbouncer
          readOnly: true
        - mountPath: /mnt
          name: persistantfs
        #- name: pgbouncer-conf
        #  mountPath: /media
        #  readOnly: true

        readinessProbe:
          initialDelaySeconds: 1
          periodSeconds: 5
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 1
          exec:
            command: ["/bin/bash","-c","mkdir -p {{ .Values.pgbouncer_logpath }} && chmod 777 {{ .Values.pgbouncer_logpath }}"]
            #command: ["/bin/bash","-c","mkdir -p {{ .Values.pgbouncer_logpath }} && chmod 777 {{ .Values.pgbouncer_logpath }} && cp /media/* /etc/pgbouncer/ && sed -i \"s/placeholder/$HOSTNAME/g\" /etc/pgbouncer/pgbouncer.ini && pgbouncer -d /etc/pgbouncer/pgbouncer.ini"]



      volumes:
      - name: pgbouncer-conf
        configMap:
          name: pgbouncer-conf # place ConfigMap `pgbouncer-conf` on /etc/pgbouncer
          items:
           - key: pgbouncer.ini
             path: pgbouncer.ini
           - key: userlist.txt
             path: userlist.txt
      - name: persistantfs
        persistentVolumeClaim:
          claimName: {{ .Values.pvcname }}
      #- name: etcpgbouncer
      #  emptyDir: {}

---
kind: Service
apiVersion: v1
metadata:
  name: pgbouncer
spec:
  selector:
    app: pgbouncer
  ports:
    - name: "6432-tcp"
      protocol: TCP
      port: 6432
      targetPort: 6432
  type: ClusterIP
  #type: LoadBalancer
