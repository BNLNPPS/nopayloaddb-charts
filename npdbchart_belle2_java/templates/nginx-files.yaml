apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-files-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes auto;

    events {
        worker_connections 1024;
    }

    http {
        include /etc/nginx/mime.types;
        default_type application/octet-stream;

        log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        server {
            listen 8443 ssl;  # Listening on port 8080
            #listen 8080;  # Listening on port 8080
            server_name {{ .Values.appname_files }}.apps.{{ .Values.okdcluster }};

            ssl_certificate /etc/grid-security/tls.crt;
            ssl_certificate_key /etc/grid-security/tls.key;
            ssl_protocols TLSv1.2 TLSv1.3;
            ssl_ciphers HIGH:!aNULL:!MD5;
            ssl_prefer_server_ciphers on;

            # Enable SSL verification (only if required)
            #ssl_verify_client on;
            #ssl_client_certificate /etc/grid-security/wildcard.bundle.sdcc.bnl.gov.pem; # CA Cert

            location / {
                root /usr/share/nginx/html;  # Serve files from this directory
            }
        }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-files
  labels:
    app: nginx-files
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx-files
  template:
    metadata:
      labels:
        app: nginx-files
    spec:
      securityContext:
        runAsUser: 101  # Default NGINX user
        fsGroup: 1000860000  # Match the group of the secret
      volumes:
        - name: files-volume
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_payload_server}}
        - name: nginx-config-volume
          configMap:
            name: nginx-files-conf
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-pid
          emptyDir: {}
        - name: grid-cert-volume
          secret:
            secretName: nginx-grid-cert
      containers:
        - name: nginx
          image: ' nginx:1.23.1-perl'
          ports:
            - containerPort: 8443
            #- containerPort: 8080
              protocol: TCP
          volumeMounts:
            - name: files-volume
              mountPath: /usr/share/nginx/html
            - name: nginx-config-volume
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-pid
              mountPath: /var/run
            - name: grid-cert-volume
              mountPath: /etc/grid-security
              readOnly: true
          imagePullPolicy: IfNotPresent
---
kind: Service
apiVersion: v1
metadata:
  name: "nginx-files"
spec:
  selector:
    app: "nginx-files"
  ports:
    #- name: http
    - name: https
      protocol: TCP
      port: 8443
      targetPort: 8443
      #port: 8080
      #targetPort: 8080
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nginx-files
  labels:
    app: nginx-files
spec:
  host: {{ .Values.appname_files }}.apps.{{ .Values.okdcluster }}
  to:
    kind: Service
    name: nginx-files
  port:
#    targetPort: 8080
    targetPort: 8443
  tls:
    termination: passthrough