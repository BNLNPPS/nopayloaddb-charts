---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javatest
  labels:
    app: javatest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javatest
  template:
    metadata:
      labels:
        app: javatest
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                #- os-worker00.sdcc.bnl.gov
                #- os-worker01.sdcc.bnl.gov
                #- os-worker02.sdcc.bnl.gov
                #- os-worker03.sdcc.bnl.gov
                #- os-worker04.sdcc.bnl.gov
                #- os-worker05.sdcc.bnl.gov
                #- os-worker06.sdcc.bnl.gov
                #- os-worker07.sdcc.bnl.gov
                - os-worker08.sdcc.bnl.gov
                #- os-worker09.sdcc.bnl.gov
                #- os-worker10.sdcc.bnl.gov
                #- os-worker11.sdcc.bnl.gov
      securityContext:
        runAsUser: 50001
        runAsGroup: 50001
        fsGroup: 50001  # Ensures PVC is accessible for writing---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: javatest
  labels:
    app: javatest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: javatest
  template:
    metadata:
      labels:
        app: javatest
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: kubernetes.io/hostname
                operator: In
                values:
                #- os-worker00.sdcc.bnl.gov
                #- os-worker01.sdcc.bnl.gov
                #- os-worker02.sdcc.bnl.gov
                #- os-worker03.sdcc.bnl.gov
                #- os-worker04.sdcc.bnl.gov
                #- os-worker05.sdcc.bnl.gov
                #- os-worker06.sdcc.bnl.gov
                #- os-worker07.sdcc.bnl.gov
                - os-worker08.sdcc.bnl.gov
                #- os-worker09.sdcc.bnl.gov
                #- os-worker10.sdcc.bnl.gov
                #- os-worker11.sdcc.bnl.gov
      securityContext:
        runAsUser: 50001
        runAsGroup: 50001
        fsGroup: 50001  # Ensures PVC is accessible for writing
      containers:
      - name: javatest
        image: "image-registry.openshift-image-registry.svc:5000/{{ .Values.project }}/b2s-okd:{{ .Values.java_docker_image | splitList ":" | last }}"
        imagePullPolicy: "IfNotPresent"
#        image: {{ splitList "/" .Values.java_docker_image | rest | join "/" }}
#        imagePullPolicy: "Always"
        ports:
        - containerPort: 8080
          protocol: TCP
        #- containerPort: 8081
        #  protocol: TCP
        readinessProbe:
          exec:
            command:
              - echo
              - ready
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 1
        env:
        - name: PGSERVER
          #value: pgbouncer.{{ .Values.project }}.svc.cluster.local
          #value: 10.130.3.193
          #value: 10.130.3.195
          #value: pgbouncer-5b745c557d-zlx6p
          #value: blcdbtest-db01.sdcc.bnl.gov
          #value: postgresql.test-cdb.svc.cluster.local
          value: blconddb03.sdcc.bnl.gov
        - name: PGPORT
          #value: "6432"
          value: "5432"
        - name: B2S_APP_LOGGING_LEVEL
          value: INFO
        - name: B2S_SERVER_LOGGING_LEVEL
          value: FINEST
        - name: B2S_HAS_EXTERNAL_SERVICE_CACHE
          #value: "true"
          value: "false"
        - name: B2S_RESOURCE_CACHE_ENABLED
          value: "false"
        - name: B2S_JWT_AUTH
          value: "true"
        - name:  B2S_AUTH_SECRET
          value: {{ .Values.jwt_secret | quote }}
        - name: B2S_SERVICES_PORT
          value: "8080"
        - name: B2S_SWAGGER_HOST_PORT
          value: "8081"
        - name: B2S_QUERY_CACHE_MAX_SIZE
          value: "100"
        - name: B2S_INITIAL_MEM
          value: "2048"
        - name: B2S_MAX_MEM
          value: "5096"
        #- name: POSTGRES_PASSWORD
        #  value: {{ .Values.dbpassword }}
        #- name: POSTGRES_HOST
        #  value: pgbouncer.{{ .Values.project }}.svc.cluster.local
        #- name: POSTGRES_PORT
        #  value: "6432"
        - name: B2S_PAYLOAD_SERVER
          value: {{ .Values.payload_server_alias }}
        - name: B2S_PAYLOAD_SERVER_SECURE
          value: "true"
        - name: B2S_PAYLOAD_SERVER_ROOT_PATH
          value: "/srv"
        volumeMounts:
        - mountPath: /srv
          name: payloadfs
          subPath: {{ .Values.subPath }}
        resources:
          requests:
          #  memory: "3Gi"
            cpu: "4"
            ephemeral-storage: "200Mi"
      volumes:
        - name: payloadfs
          persistentVolumeClaim:
            claimName: {{ .Values.pvc_payload_server}}