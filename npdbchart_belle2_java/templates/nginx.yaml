apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
data:
  nginx.conf: |
    upstream java {
        server java.{{ .Values.project }}.svc.cluster.local:8080;
    }

    error_log /var/log/nginx/error.log debug;
    access_log /var/log/nginx/access.log;

    server {

        listen 8080;

        location / {
            proxy_pass http://java;
            proxy_redirect off;

            proxy_read_timeout 1800;
            proxy_connect_timeout 1800;
            proxy_send_timeout 1800;
            send_timeout 1800;
            fastcgi_read_timeout 1800;
        }

    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      containers:
      - name: nginx
        image: nginx:1.14.2
        ports:
        - containerPort: 80
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/conf.d # mount nginx-conf volumn to /etc/nginx/conf.d
          readOnly: true
        - name: log
          mountPath: /var/log/nginx
        - name: cache #to avoid permissions denied error
          mountPath: /var/cache/nginx
        - name: run #to avoid permissions denied error
          mountPath: /var/run
      volumes:
      - name: nginx-conf
        configMap:
          name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx/conf.d
          items:
           - key: nginx.conf
             path: nginx.conf
      - name: log
        emptyDir: {}
      - name: cache
        emptyDir: {}
      - name: run
        emptyDir: {}
---
kind: Service
apiVersion: v1
metadata:
  name: "nginx"
spec:
  selector:
    app: "nginx"
  ports:
    - name: http
      protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
kind: Route
apiVersion: route.openshift.io/v1
metadata:
  name: nginx
  labels:
    app: nginx
spec:
  host: {{ .Values.appname }}.apps.{{ .Values.okdcluster }}
  to:
    kind: Service
    name: nginx
  port:
    targetPort: http
  tls:
    termination: edge
